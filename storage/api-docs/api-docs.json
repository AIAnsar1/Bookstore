{
    "openapi": "3.0.0",
    "info": {
        "title": "alex production",
        "description": "Documentation for alex",
        "contact": {
            "email": "alex@gmail"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/author": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Get list of Author",
                "description": "Returns list of Author",
                "operationId": "indexAuthor",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Author"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Authors"
                ],
                "summary": "Insert a new Author",
                "description": "Insert a new Author",
                "operationId": "storeAuthor",
                "requestBody": {
                    "description": "Author to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Author"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Author created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Author"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/author/{author_id}": {
            "get": {
                "tags": [
                    "Authors"
                ],
                "summary": "Show a Author from his Id",
                "description": "Show a Author from his Id",
                "operationId": "showAuthor",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Author--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Author"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authors"
                ],
                "summary": "Delete a Author",
                "description": "Delete a Author",
                "operationId": "destroyAuthor",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Author--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Author"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Authors"
                ],
                "summary": "Update an existing Author",
                "description": "Update an existing Author",
                "operationId": "updateAuthor",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Author--id"
                    }
                ],
                "requestBody": {
                    "description": "Author to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Author"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Author"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Author not found"
                    }
                }
            }
        },
        "/api/brand": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get list of Brand",
                "description": "Returns list of Brand",
                "operationId": "indexBrand",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Insert a new Brand",
                "description": "Insert a new Brand",
                "operationId": "storeBrand",
                "requestBody": {
                    "description": "Brand to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/brand/{brand_id}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Show a Brand from his Id",
                "description": "Show a Brand from his Id",
                "operationId": "showBrand",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Brand--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete a Brand",
                "description": "Delete a Brand",
                "operationId": "destroyBrand",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Brand--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update an existing Brand",
                "description": "Update an existing Brand",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Brand--id"
                    }
                ],
                "requestBody": {
                    "description": "Brand to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Brand"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Get list of Category",
                "description": "Returns list of Category",
                "operationId": "indexCategory",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Insert a new Category",
                "description": "Insert a new Category",
                "operationId": "storeCategory",
                "requestBody": {
                    "description": "Category to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/category/{category_id}": {
            "get": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Show a Category from his Id",
                "description": "Show a Category from his Id",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Category--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Delete a Category",
                "description": "Delete a Category",
                "operationId": "destroyCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Category--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Categorys"
                ],
                "summary": "Update an existing Category",
                "description": "Update an existing Category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Category--id"
                    }
                ],
                "requestBody": {
                    "description": "Category to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/country": {
            "get": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Get list of Country",
                "description": "Returns list of Country",
                "operationId": "indexCountry",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Country"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Insert a new Country",
                "description": "Insert a new Country",
                "operationId": "storeCountry",
                "requestBody": {
                    "description": "Country to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Country created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/country/{country_id}": {
            "get": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Show a Country from his Id",
                "description": "Show a Country from his Id",
                "operationId": "showCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Country--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Delete a Country",
                "description": "Delete a Country",
                "operationId": "destroyCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Country--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Countrys"
                ],
                "summary": "Update an existing Country",
                "description": "Update an existing Country",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Country--id"
                    }
                ],
                "requestBody": {
                    "description": "Country to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Country"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Country not found"
                    }
                }
            }
        },
        "/api/crudgenerators": {
            "get": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Get list of CrudGenerator",
                "description": "Returns list of CrudGenerator",
                "operationId": "indexCrudGenerator",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CrudGenerator"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Insert a new CrudGenerator",
                "description": "Insert a new CrudGenerator",
                "operationId": "storeCrudGenerator",
                "requestBody": {
                    "description": "CrudGenerator to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CrudGenerator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CrudGenerator created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/crudgenerators/{crudgenerator_id}": {
            "get": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Show a CrudGenerator from his Id",
                "description": "Show a CrudGenerator from his Id",
                "operationId": "showCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Delete a CrudGenerator",
                "description": "Delete a CrudGenerator",
                "operationId": "destroyCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Update an existing CrudGenerator",
                "description": "Update an existing CrudGenerator",
                "operationId": "updateCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "requestBody": {
                    "description": "CrudGenerator to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CrudGenerator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            }
        },
        "/api/faq": {
            "get": {
                "tags": [
                    "Faqs"
                ],
                "summary": "Get list of Faq",
                "description": "Returns list of Faq",
                "operationId": "indexFaq",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Faq"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Faqs"
                ],
                "summary": "Insert a new Faq",
                "description": "Insert a new Faq",
                "operationId": "storeFaq",
                "requestBody": {
                    "description": "Faq to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Faq"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Faq created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Faq"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/faq/{faq_id}": {
            "get": {
                "tags": [
                    "Faqs"
                ],
                "summary": "Show a Faq from his Id",
                "description": "Show a Faq from his Id",
                "operationId": "showFaq",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Faq--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Faq"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Faq not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Faqs"
                ],
                "summary": "Delete a Faq",
                "description": "Delete a Faq",
                "operationId": "destroyFaq",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Faq--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Faq"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Faq not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Faqs"
                ],
                "summary": "Update an existing Faq",
                "description": "Update an existing Faq",
                "operationId": "updateFaq",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Faq--id"
                    }
                ],
                "requestBody": {
                    "description": "Faq to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Faq"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Faq"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Faq not found"
                    }
                }
            }
        },
        "/api/founder": {
            "get": {
                "tags": [
                    "Founders"
                ],
                "summary": "Get list of Founder",
                "description": "Returns list of Founder",
                "operationId": "indexFounder",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Founder"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Founders"
                ],
                "summary": "Insert a new Founder",
                "description": "Insert a new Founder",
                "operationId": "storeFounder",
                "requestBody": {
                    "description": "Founder to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Founder"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Founder created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Founder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/founder/{founder_id}": {
            "get": {
                "tags": [
                    "Founders"
                ],
                "summary": "Show a Founder from his Id",
                "description": "Show a Founder from his Id",
                "operationId": "showFounder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Founder--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Founder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Founder not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Founders"
                ],
                "summary": "Delete a Founder",
                "description": "Delete a Founder",
                "operationId": "destroyFounder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Founder--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Founder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Founder not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Founders"
                ],
                "summary": "Update an existing Founder",
                "description": "Update an existing Founder",
                "operationId": "updateFounder",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Founder--id"
                    }
                ],
                "requestBody": {
                    "description": "Founder to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Founder"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Founder"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Founder not found"
                    }
                }
            }
        },
        "/api/payment": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get list of Payment",
                "description": "Returns list of Payment",
                "operationId": "indexPayment",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Insert a new Payment",
                "description": "Insert a new Payment",
                "operationId": "storePayment",
                "requestBody": {
                    "description": "Payment to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Payment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/payment/{payment_id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Show a Payment from his Id",
                "description": "Show a Payment from his Id",
                "operationId": "showPayment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Payment--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Payment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a Payment",
                "description": "Delete a Payment",
                "operationId": "destroyPayment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Payment--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Payment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update an existing Payment",
                "description": "Update an existing Payment",
                "operationId": "updatePayment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Payment--id"
                    }
                ],
                "requestBody": {
                    "description": "Payment to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Payment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found"
                    }
                }
            }
        },
        "/api/product": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of Product",
                "description": "Returns list of Product",
                "operationId": "indexProduct",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Insert a new Product",
                "description": "Insert a new Product",
                "operationId": "storeProduct",
                "requestBody": {
                    "description": "Product to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/product/{product_id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Show a Product from his Id",
                "description": "Show a Product from his Id",
                "operationId": "showProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Product--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a Product",
                "description": "Delete a Product",
                "operationId": "destroyProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Product--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing Product",
                "description": "Update an existing Product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Product--id"
                    }
                ],
                "requestBody": {
                    "description": "Product to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/productrelaise": {
            "get": {
                "tags": [
                    "ProductRelaises"
                ],
                "summary": "Get list of ProductRelaise",
                "description": "Returns list of ProductRelaise",
                "operationId": "indexProductRelaise",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductRelaise"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ProductRelaises"
                ],
                "summary": "Insert a new ProductRelaise",
                "description": "Insert a new ProductRelaise",
                "operationId": "storeProductRelaise",
                "requestBody": {
                    "description": "ProductRelaise to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/ProductRelaise"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ProductRelaise created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProductRelaise"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/productrelaise/{productrelaise_id}": {
            "get": {
                "tags": [
                    "ProductRelaises"
                ],
                "summary": "Show a ProductRelaise from his Id",
                "description": "Show a ProductRelaise from his Id",
                "operationId": "showProductRelaise",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductRelaise--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProductRelaise"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProductRelaise not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProductRelaises"
                ],
                "summary": "Delete a ProductRelaise",
                "description": "Delete a ProductRelaise",
                "operationId": "destroyProductRelaise",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductRelaise--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProductRelaise"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "ProductRelaise not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "ProductRelaises"
                ],
                "summary": "Update an existing ProductRelaise",
                "description": "Update an existing ProductRelaise",
                "operationId": "updateProductRelaise",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/ProductRelaise--id"
                    }
                ],
                "requestBody": {
                    "description": "ProductRelaise to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/ProductRelaise"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ProductRelaise"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ProductRelaise not found"
                    }
                }
            }
        },
        "/api/role": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get list of Role",
                "description": "Returns list of Role",
                "operationId": "indexRole",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Insert a new Role",
                "description": "Insert a new Role",
                "operationId": "storeRole",
                "requestBody": {
                    "description": "Role to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/role/{role_id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Show a Role from his Id",
                "description": "Show a Role from his Id",
                "operationId": "showRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Role--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a Role",
                "description": "Delete a Role",
                "operationId": "destroyRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Role--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update an existing Role",
                "description": "Update an existing Role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Role--id"
                    }
                ],
                "requestBody": {
                    "description": "Role to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            }
        },
        "/api/tarife": {
            "get": {
                "tags": [
                    "Tarifes"
                ],
                "summary": "Get list of Tarife",
                "description": "Returns list of Tarife",
                "operationId": "indexTarife",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tarife"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tarifes"
                ],
                "summary": "Insert a new Tarife",
                "description": "Insert a new Tarife",
                "operationId": "storeTarife",
                "requestBody": {
                    "description": "Tarife to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Tarife"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tarife created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tarife"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/tarife/{tarife_id}": {
            "get": {
                "tags": [
                    "Tarifes"
                ],
                "summary": "Show a Tarife from his Id",
                "description": "Show a Tarife from his Id",
                "operationId": "showTarife",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Tarife--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tarife"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tarife not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tarifes"
                ],
                "summary": "Delete a Tarife",
                "description": "Delete a Tarife",
                "operationId": "destroyTarife",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Tarife--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tarife"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Tarife not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tarifes"
                ],
                "summary": "Update an existing Tarife",
                "description": "Update an existing Tarife",
                "operationId": "updateTarife",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Tarife--id"
                    }
                ],
                "requestBody": {
                    "description": "Tarife to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Tarife"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tarife"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tarife not found"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of User",
                "description": "Returns list of User",
                "operationId": "indexUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "storeUser",
                "requestBody": {
                    "description": "User to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/user/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show a User from his Id",
                "description": "Show a User from his Id",
                "operationId": "showUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a User",
                "description": "Delete a User",
                "operationId": "destroyUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing User",
                "description": "Update an existing User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "requestBody": {
                    "description": "User to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Author": {
                "title": "Author",
                "description": "Author model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Author",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Author",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Author",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Author",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Authors": {
                "title": "Authors list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Author"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Brand": {
                "title": "Brand",
                "description": "Brand model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Brand",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Brand",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Brand",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Brand",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Brands": {
                "title": "Brands list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Brand"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Category",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Category",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Category",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Category",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Categorys": {
                "title": "Categorys list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Country": {
                "title": "Country",
                "description": "Country model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Country",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Country",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Country",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Country",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Countrys": {
                "title": "Countrys list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Country"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "CrudGenerator": {
                "title": "CrudGenerator",
                "description": "CrudGenerator model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of CrudGenerator",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of CrudGenerator",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of CrudGenerator",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of CrudGenerator",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "CrudGenerators": {
                "title": "CrudGenerators list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CrudGenerator"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Faq": {
                "title": "Faq",
                "description": "Faq model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Faq",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Faq",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Faq",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Faq",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Faqs": {
                "title": "Faqs list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Faq"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Founder": {
                "title": "Founder",
                "description": "Founder model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Founder",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Founder",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Founder",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Founder",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Founders": {
                "title": "Founders list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Founder"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Payment": {
                "title": "Payment",
                "description": "Payment model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Payment",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Payment",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Payment",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Payment",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Payments": {
                "title": "Payments list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Product",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Product",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Product",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Product",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Products": {
                "title": "Products list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "ProductRelaise": {
                "title": "ProductRelaise",
                "description": "ProductRelaise model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of ProductRelaise",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of ProductRelaise",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of ProductRelaise",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of ProductRelaise",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "ProductRelaises": {
                "title": "ProductRelaises list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductRelaise"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Role",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Role",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Role",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Role",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Roles": {
                "title": "Roles list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Tarife": {
                "title": "Tarife",
                "description": "Tarife model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Tarife",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Tarife",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of Tarife",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of Tarife",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Tarifes": {
                "title": "Tarifes list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tarife"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of User",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of User",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of User",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of User",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Users": {
                "title": "Users list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "Author--id": {
                "name": "Author_id",
                "in": "path",
                "description": "Id of Author",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Brand--id": {
                "name": "Brand_id",
                "in": "path",
                "description": "Id of Brand",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Category--id": {
                "name": "Category_id",
                "in": "path",
                "description": "Id of Category",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Country--id": {
                "name": "Country_id",
                "in": "path",
                "description": "Id of Country",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "CrudGenerator--id": {
                "name": "CrudGenerator_id",
                "in": "path",
                "description": "Id of CrudGenerator",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Faq--id": {
                "name": "Faq_id",
                "in": "path",
                "description": "Id of Faq",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Founder--id": {
                "name": "Founder_id",
                "in": "path",
                "description": "Id of Founder",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Payment--id": {
                "name": "Payment_id",
                "in": "path",
                "description": "Id of Payment",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Product--id": {
                "name": "Product_id",
                "in": "path",
                "description": "Id of Product",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "ProductRelaise--id": {
                "name": "ProductRelaise_id",
                "in": "path",
                "description": "Id of ProductRelaise",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Role--id": {
                "name": "Role_id",
                "in": "path",
                "description": "Id of Role",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Tarife--id": {
                "name": "Tarife_id",
                "in": "path",
                "description": "Id of Tarife",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "User--id": {
                "name": "User_id",
                "in": "path",
                "description": "Id of User",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            }
        }
    }
}